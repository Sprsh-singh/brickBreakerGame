import javax.swing.JPanel;
import javax.swing.Timer;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
/**
 *
 * @author Virat
 */
public class GamePlay extends JPanel implements KeyListener, ActionListener {
    private boolean play=false;
    private int score=0;
    private int totalbricks=28;
    
    private final Timer Timer;
    private final int delay=8;
    private int playerx=10;
    private int ballx=120;
    private int bally=340;
    private int ballxdirection=-1;
    private int ballydirection=-3;
    private mapview map;
    
    public GamePlay(){
        map=new mapview(4,7);
        addKeyListener(this);
        setFocusable(true);
        Timer=new Timer(delay,this);
        Timer.start();
    }
    
    public void paint(Graphics g){
        g.setColor(Color.WHITE);
        g.fillRect(1, 1, 692, 592);
        
        map.brickview((Graphics2D)g);
        g.setColor(Color.ORANGE);
        g.fillRect(playerx, 550, 100, 15);//slider
        g.setColor(Color.BLACK);
        g.setFont(new Font("serif",Font.BOLD,25));
                g.drawString(""+score, 590,30);
            
                //ball
        g.setColor(Color.DARK_GRAY);
        g.fillOval(ballx, bally, 20, 20);
        
        if(bally>570){
           play=false;
           ballxdirection=0;
           ballydirection=0;
           g.setColor(Color.red);
           g.setFont(new Font("serif", Font.ITALIC, 22));
           g.drawString("Game over and your score is"+score, 190, 310);
           g.setFont(new Font("serif",Font.ITALIC,22));
           g.drawString("press enter to restart", 190, 360);
        }
           if(totalbricks==0){
               play=false;
               ballxdirection=-1;
               ballydirection=-3;
                g.setColor(Color.GREEN);
           g.setFont(new Font("serif", Font.ITALIC, 22));
           g.drawString("You Win"+score, 190, 310);
           g.setFont(new Font("serif",Font.ITALIC,22));
           g.drawString("press enter to restart", 190, 360);
           }
           g.dispose();
        }
  
   @Override
    public void actionPerformed(ActionEvent e){
        Timer.start();
        
        if(play){
            if(new Rectangle(ballx,bally,20,20).intersects(new Rectangle(playerx,550,100,15))){
                ballydirection=-ballydirection;
                
            }
            A:
            for(int i=0;i<map.map.length;i++){
                for(int j=0;j<map.map[0].length;j++){
                    if(map.map[i][j]>0){
                        int Brickx=j*map.bwidth+80;
                        int Bricky=i* map.bhight+60;
                        int bwidth=map.bwidth;
                        int bhight=map.bhight;
                        
                        Rectangle rect=new Rectangle(Brickx,Bricky,bwidth,bhight);
                        Rectangle ballrect=new Rectangle(ballx,bally,22,22);
                        Rectangle brickrect=rect;
                        if(ballrect.intersects(brickrect)){
                            map.valueset(0,i,j);
                            totalbricks--;
                            score+=2;
                            if(ballx+19<=brickrect.x||bally+1>=brickrect.x+bwidth){
                                ballxdirection=-ballxdirection;
                            }else{
                                ballydirection=-ballydirection;
                        }
                            break A;
                    }
            }
        }
    }
    ballx+=ballxdirection;
    bally+=ballydirection;
    if(ballx<0)
    {
        ballxdirection=-ballxdirection;
    }
    if(bally<0)
    {
        ballydirection= -ballydirection;
    }
    if(ballx>670)
    {
        ballxdirection=-ballxdirection;
    }
        }
        repaint();
        //Timer.start();
    }
    
    @Override
    public void keyTyped(KeyEvent e){
    }
    @Override
    public void keyReleased(KeyEvent e){
        //throw new UnsupportedOperationException("Not supported yet.");
    }
  @Override
    public void keyPressed(KeyEvent e){
        if(e.getKeyCode()==KeyEvent.VK_RIGHT){
          if(playerx>=600){  
              playerx=600;
        }else{
              moveRight();
          }
        }
        if(e.getKeyCode()==KeyEvent.VK_LEFT){
            if(playerx<10){
                playerx=10;
            }else{
                moveLeft();
            }
        }
        if(e.getKeyCode()==KeyEvent.VK_ENTER){
            if(!play){
                ballx=120;
                bally=350;
                ballxdirection=-1;
                ballydirection=-3;
                score=0;
                playerx=310;
                totalbricks=21;
                map=new mapview(4,7);
                
                repaint();
            }
        }
    }
  
    
    
    public void moveRight()
    {
        play=true;
        playerx+=20;
    }
    public void moveLeft()
    {
        play=true;
        playerx-=20;
    }

    /*@Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }*/
          
    
}
